---
- name: deploy application
  hosts: all
  gather_facts: false
  become: yes
  #vars:
  #  - server_nfs: fr-hb-gsw-c.fsavoir.lille
  #  - share_nfs: /data

  collections:
    - kubernetes.core

  tasks:
#  - name: Create a directory {{ client }} in /tmp
#    file:
#      path: /tmp/{{ client }}
#      recurse: yes
#      state: directory
#      mode: '0755'
#  - name: Generate script for certificat.
#    template:
#      src: "template_script_cert.sh.j2"
#      dest: "/tmp/{{ client }}/generate_certificat.sh"
#      mode: '0755'
#  - name: Execute script to generate certificat.
#    shell: /tmp/{{ client }}/generate_certificat.sh
  - name: Create a directory www if it does not exist
    file:
      path: /web-files/{{ client }}/www
      recurse: yes
      state: directory
      mode: '0755'
    #  owner: '101'
    #  group: '101'
    delegate_to: "{{ inventory_hostname }}"
  - name: Add directory to exports file
    lineinfile:
      path: /etc/exports
      line: "/data/{{ client }}          *(rw)"
      create: yes
    delegate_to: "{{ server_nfs }}"
  - name: NFS apply change configrue
    shell: systemctl reload nfs;exportfs -a
    delegate_to: "{{ server_nfs }}"
# - name: Create a directory files if it does not exist
#    file:
#      path: /data/{{ client }}/files
#      recurse: yes
#      state: directory
#      mode: '0755'
#    delegate_to: "{{ server_nfs }}"
  - name: Execute first tasks to create website
    include_role:
      name: website
      tasks_from: "{{ item }}"
    with_items:
      - 'create_ns.yml'
      - 'create_configmap_nginx.yml'
      - 'create_pv_1.yml'
      - 'create_pv_2.yml'
  #- name: Define TLS
  #  shell: kubectl create -n {{ client }}-system secret tls {{ client }}-tls-credential --key=/tmp/{{ client }}/{{ client }}.gsw.fsavoir.lille.key --cert=/tmp/{{ client }}/{{ client }}.gsw.fsavoir.lille.crt
  - name: Continue tasks to create website
    include_role:
      name: website
      tasks_from: "{{ item }}"
    with_items:
      - 'create_service.yml'
      - 'create_ingress.yml'
      - 'create_deployment.yml'
#  - name: Delete temp directory
#    file:
#      path: /tmp/{{ client }}/
#      state: absent
  - name: Generate index.php configuration file. 
    template:
      src: "templates/template_website.php.j2"
      dest: "/web-files/{{ client }}/www/index.php"
    delegate_to: "{{ inventory_hostname }}"

