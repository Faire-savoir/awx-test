- name: Create a k8s configmap for nginx
  k8s:
    kubeconfig: /root/.kube/config
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        namespace: "{{ ns }}"
        name: "{{ ns }}-name"
        labels:
          app: "{{ ns }}"
      spec:
        selector:
          matchLabels:
            app: "{{ ns }}"
        replicas: 2
        template:
          metadata:
            namespace: "{{ ns }}"
            labels:
              app: "{{ ns }}"
            annotations:
              sidecar.istio.io/inject: "false"
          spec:
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - "{{ ns }}"
                  topologyKey: "kubernetes.io/hostname"
            containers:
            - name: "{{ ns }}-php"
              image: php:8.0-fpm
              ports:
              - containerPort: 9000
                name: http
                protocol: TCP
              volumeMounts:
              # - name: nginx-config-volume
              #   mountPath: /etc/nginx/nginx.conf
              #   subPath: nginx.conf
              - name: www-storage
                mountPath: /usr/share/nginx/html/
              readinessProbe:
                tcpSocket:
                  port: http
                initialDelaySeconds: 10
                timeoutSeconds: 5
            - name: "{{ ns }}-nginx"
              image: nginx
              ports:
              - containerPort: 80
              volumeMounts:
              - name: nginx-config-volume
                mountPath: /etc/nginx/nginx.conf
                subPath: nginx.conf   
          #  - name: html-volume
          #    mountPath: /usr/share/nginx/html
          #  - mountPath: "/data/files"
              - mountPath: "/usr/share/nginx/html/"
                name: www-storage
            volumes:
            - name: www-storage
              persistentVolumeClaim:
                claimName: "{{ ns }}-nfs-pvc"
            - name: nginx-config-volume
              persistentVolumeClaim:
                claimName: "{{ ns }}-nfs-pvc-nginx"
              #configMap:
              #  name: "{{ ns }}-nginx-config"
            restartPolicy: Always